{"version":3,"file":"DashboardGeneral-nQtfIFR4.js","sources":["../../src/views/dashboard/DashboardGeneral.vue"],"sourcesContent":["<template>\r\n  <div class=\"row dashboardView\">\r\n    <DashboardCard title=\"Messages per day\">\r\n      <TimeSlide\r\n        :data=\"allMessages\"\r\n        :per-author=\"false\"\r\n      />\r\n    </DashboardCard>\r\n\r\n    <DashboardCard\r\n      title=\"Filter how many times words are used\"\r\n      subtitle=\"Fill in words to see how often they are used\"\r\n    >\r\n      <q-btn\r\n        color=\"secondary\"\r\n        class=\"q-mb-md\"\r\n        to=\"/dashboard/words\"\r\n      >\r\n        Show in-depth analysis\r\n      </q-btn>\r\n\r\n      <q-select\r\n        filled\r\n        v-model=\"filterWords\"\r\n        multiple\r\n        use-chips\r\n        hide-dropdown-icon\r\n        use-input\r\n        new-value-mode=\"add\"\r\n        label=\"Filtered words\"\r\n      />\r\n\r\n      <div class=\"row\">\r\n        <MessageWithWord\r\n          class=\"col-12\"\r\n          :data=\"data\"\r\n          :filter-words=\"filterWords\"\r\n        />\r\n      </div>\r\n    </DashboardCard>\r\n\r\n    <DashboardCard\r\n      is-small\r\n      title=\"Emoji's used total\"\r\n    >\r\n      <EmojiTable\r\n        :data=\"messagesContainingEmoji\"\r\n        class=\"q-pr-md\"\r\n      />\r\n    </DashboardCard>\r\n\r\n    <DashboardCard\r\n      is-small\r\n      title=\"Emoji's used per person\"\r\n    >\r\n      <EmojiTablePerPerson :data=\"messagesContainingEmoji\" />\r\n    </DashboardCard>\r\n\r\n    <DashboardCard\r\n      is-small\r\n      title=\"Attachments sent\"\r\n    >\r\n      <!-- <AttachmentsChart :data=\"messagesContainginAttachments\" />\r\n       -->\r\n      <BarChart\r\n        :series=\"attachments.series\"\r\n        :categories=\"attachments.categories\"\r\n      />\r\n    </DashboardCard>\r\n\r\n    <DashboardCard\r\n      is-small\r\n      title=\"Average message length\"\r\n    >\r\n      <BarChart\r\n        :series=\"textLength.series\"\r\n        :categories=\"textLength.categories\"\r\n      />\r\n    </DashboardCard>\r\n\r\n    <DashboardCard\r\n      title=\"Events\"\r\n      v-if=\"events.length > 1\"\r\n    >\r\n      <EventsTable :data=\"events\" />\r\n    </DashboardCard>\r\n\r\n    <!-- <DashboardCard\r\n      is-small\r\n      v-if=\"isGroupChat\"\r\n      title=\"Group name changes\"\r\n    >\r\n      <GroupNameChangesTable :data=\"events\" /> -->\r\n    <!-- </DashboardCard> -->\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, computed } from 'vue'\r\nimport MessageWithWord from '@/components/MessageWithWord.vue'\r\nimport EmojiTable from '@/components/EmojiTable.vue'\r\nimport EmojiTablePerPerson from '@/components/EmojiTablePerPerson.vue'\r\nimport TimeSlide from '@/components/TimeSlide.vue'\r\nimport EventsTable from '@/components/EventsTable.vue'\r\n// import GroupNameChangesTable from '@/components/GroupNameChangesTable.vue'\r\nimport { useStore } from '@/store'\r\nimport { useSummaryStore } from '@/store/summary'\r\nimport { SUMMARY_COLLECTION } from '@/config/summaryItems'\r\nimport DashboardCard from '@/components/dashboard/DashboardCard.vue'\r\nimport BarChart from '@/components/BarChart.vue'\r\nimport useTextLengthSeries from '@/composables/useTextLengthSeries.ts'\r\nimport useAttachmentSeries from '@/composables/useAttachmentSeries.ts'\r\n\r\nconst store = useStore()\r\nconst filterWords = ref(['shit'])\r\nconst data = computed(() => store.authorsDataMessages)\r\nconst allMessages = computed(() => store.messagesPerAuthor)\r\nconst messagesContainingEmoji = computed(() => store.messagesContainingEmoji)\r\nconst messagesContainginAttachments = computed(() => store.messagesContainginAttachments)\r\nconst events = computed(() => store.eventsData)\r\n// const isGroupChat = computed(() => store.isGroupChat)\r\n\r\nconst summaryStore = useSummaryStore()\r\nsummaryStore.setSummaryState(SUMMARY_COLLECTION.general)\r\n\r\nconst textLength = computed(() => useTextLengthSeries(data.value, true))\r\nconst attachments = computed(() => useAttachmentSeries(messagesContainginAttachments.value, false))\r\n\r\n// test\r\n// onMounted(() => {\r\n//   function checkEmojiRendering() {\r\n//     const emojiElements = document.querySelectorAll('.isEmoji')\r\n\r\n//     emojiElements.forEach((el) => {\r\n//       // const testEmoji = document.createElement('span')\r\n//       if (el.textContent == 'ðŸ¥²') {\r\n//         console.log(el)\r\n//         el.classList.add('fallback')\r\n//       }\r\n//     })\r\n//   }\r\n//   checkEmojiRendering()\r\n// })\r\n</script>\r\n"],"names":["store","useStore","filterWords","ref","data","computed","allMessages","messagesContainingEmoji","messagesContainginAttachments","events","useSummaryStore","SUMMARY_COLLECTION","textLength","useTextLengthSeries","attachments","useAttachmentSeries"],"mappings":"ugCAiHA,MAAMA,EAAQC,IACRC,EAAcC,EAAI,CAAC,MAAM,CAAC,EAC1BC,EAAOC,EAAS,IAAML,EAAM,mBAAmB,EAC/CM,EAAcD,EAAS,IAAML,EAAM,iBAAiB,EACpDO,EAA0BF,EAAS,IAAML,EAAM,uBAAuB,EACtEQ,EAAgCH,EAAS,IAAML,EAAM,6BAA6B,EAClFS,EAASJ,EAAS,IAAML,EAAM,UAAU,EAGzBU,IACR,gBAAgBC,EAAmB,OAAO,EAEvD,MAAMC,EAAaP,EAAS,IAAMQ,EAAoBT,EAAK,MAAO,EAAI,CAAC,EACjEU,EAAcT,EAAS,IAAMU,EAAoBP,EAA8B,MAAO,EAAK,CAAC"}