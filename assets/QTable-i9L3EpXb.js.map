{"version":3,"file":"QTable-i9L3EpXb.js","sources":["../../node_modules/quasar/src/components/table/QTh.js","../../node_modules/quasar/src/components/markup-table/QMarkupTable.js","../../node_modules/quasar/src/components/table/get-table-middle.js","../../node_modules/quasar/src/components/virtual-scroll/QVirtualScroll.js","../../node_modules/quasar/src/utils/private/sort.js","../../node_modules/quasar/src/components/table/table-sort.js","../../node_modules/quasar/src/components/table/table-filter.js","../../node_modules/quasar/src/components/table/table-pagination.js","../../node_modules/quasar/src/components/table/table-row-selection.js","../../node_modules/quasar/src/components/table/table-row-expand.js","../../node_modules/quasar/src/components/table/table-column-selection.js","../../node_modules/quasar/src/components/table/QTable.js"],"sourcesContent":["import { h, getCurrentInstance } from 'vue'\n\nimport QIcon from '../icon/QIcon.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { hSlot, hUniqueSlot } from '../../utils/private/render.js'\n\nexport default createComponent({\n  name: 'QTh',\n\n  props: {\n    props: Object,\n    autoWidth: Boolean\n  },\n\n  emits: [ 'click' ],\n\n  setup (props, { slots, emit }) {\n    const vm = getCurrentInstance()\n    const { proxy: { $q } } = vm\n\n    const onClick = evt => { emit('click', evt) }\n\n    return () => {\n      if (props.props === void 0) {\n        return h('th', {\n          class: props.autoWidth === true ? 'q-table--col-auto-width' : '',\n          onClick\n        }, hSlot(slots.default))\n      }\n\n      let col, child\n      const name = vm.vnode.key\n\n      if (name) {\n        col = props.props.colsMap[ name ]\n        if (col === void 0) { return }\n      }\n      else {\n        col = props.props.col\n      }\n\n      if (col.sortable === true) {\n        const action = col.align === 'right'\n          ? 'unshift'\n          : 'push'\n\n        child = hUniqueSlot(slots.default, [])\n        child[ action ](\n          h(QIcon, {\n            class: col.__iconClass,\n            name: $q.iconSet.table.arrowUp\n          })\n        )\n      }\n      else {\n        child = hSlot(slots.default)\n      }\n\n      const data = {\n        class: col.__thClass\n          + (props.autoWidth === true ? ' q-table--col-auto-width' : ''),\n        style: col.headerStyle,\n        onClick: evt => {\n          col.sortable === true && props.props.sort(col)\n          onClick(evt)\n        }\n      }\n\n      return h('th', data, child)\n    }\n  }\n})\n","import { h, computed, getCurrentInstance } from 'vue'\n\nimport useDark, { useDarkProps } from '../../composables/private/use-dark.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { hSlot } from '../../utils/private/render.js'\n\nconst separatorValues = [ 'horizontal', 'vertical', 'cell', 'none' ]\n\nexport default createComponent({\n  name: 'QMarkupTable',\n\n  props: {\n    ...useDarkProps,\n\n    dense: Boolean,\n    flat: Boolean,\n    bordered: Boolean,\n    square: Boolean,\n    wrapCells: Boolean,\n\n    separator: {\n      type: String,\n      default: 'horizontal',\n      validator: v => separatorValues.includes(v)\n    }\n  },\n\n  setup (props, { slots }) {\n    const vm = getCurrentInstance()\n    const isDark = useDark(props, vm.proxy.$q)\n\n    const classes = computed(() =>\n      'q-markup-table q-table__container q-table__card'\n      + ` q-table--${ props.separator }-separator`\n      + (isDark.value === true ? ' q-table--dark q-table__card--dark q-dark' : '')\n      + (props.dense === true ? ' q-table--dense' : '')\n      + (props.flat === true ? ' q-table--flat' : '')\n      + (props.bordered === true ? ' q-table--bordered' : '')\n      + (props.square === true ? ' q-table--square' : '')\n      + (props.wrapCells === false ? ' q-table--no-wrap' : '')\n    )\n\n    return () => h('div', {\n      class: classes.value\n    }, [\n      h('table', { class: 'q-table' }, hSlot(slots.default))\n    ])\n  }\n})\n","import { h } from 'vue'\n\nexport default function (props, content) {\n  return h('div', props, [\n    h('table', { class: 'q-table' }, content)\n  ])\n}\n","import { h, ref, computed, watch, onBeforeMount, onMounted, onBeforeUnmount, onActivated, onDeactivated } from 'vue'\n\nimport QList from '../item/QList.js'\nimport QMarkupTable from '../markup-table/QMarkupTable.js'\nimport getTableMiddle from '../table/get-table-middle.js'\n\nimport { useVirtualScroll, useVirtualScrollProps } from './use-virtual-scroll.js'\n\nimport { createComponent } from '../../utils/private/create.js'\nimport { getScrollTarget } from '../../utils/scroll.js'\nimport { listenOpts } from '../../utils/event.js'\nimport { hMergeSlot } from '../../utils/private/render.js'\n\nconst comps = {\n  list: QList,\n  table: QMarkupTable\n}\n\nconst typeOptions = [ 'list', 'table', '__qtable' ]\n\nexport default createComponent({\n  name: 'QVirtualScroll',\n\n  props: {\n    ...useVirtualScrollProps,\n\n    type: {\n      type: String,\n      default: 'list',\n      validator: v => typeOptions.includes(v)\n    },\n\n    items: {\n      type: Array,\n      default: () => []\n    },\n\n    itemsFn: Function,\n    itemsSize: Number,\n\n    scrollTarget: {\n      default: void 0\n    }\n  },\n\n  setup (props, { slots, attrs }) {\n    let localScrollTarget\n    const rootRef = ref(null)\n\n    const virtualScrollLength = computed(() => (\n      props.itemsSize >= 0 && props.itemsFn !== void 0\n        ? parseInt(props.itemsSize, 10)\n        : (Array.isArray(props.items) ? props.items.length : 0)\n    ))\n\n    const {\n      virtualScrollSliceRange,\n      localResetVirtualScroll,\n      padVirtualScroll,\n      onVirtualScrollEvt\n    } = useVirtualScroll({\n      virtualScrollLength, getVirtualScrollTarget, getVirtualScrollEl\n    })\n\n    const virtualScrollScope = computed(() => {\n      if (virtualScrollLength.value === 0) {\n        return []\n      }\n\n      const mapFn = (item, i) => ({\n        index: virtualScrollSliceRange.value.from + i,\n        item\n      })\n\n      return props.itemsFn === void 0\n        ? props.items.slice(virtualScrollSliceRange.value.from, virtualScrollSliceRange.value.to).map(mapFn)\n        : props.itemsFn(virtualScrollSliceRange.value.from, virtualScrollSliceRange.value.to - virtualScrollSliceRange.value.from).map(mapFn)\n    })\n\n    const classes = computed(() =>\n      'q-virtual-scroll q-virtual-scroll' + (props.virtualScrollHorizontal === true ? '--horizontal' : '--vertical')\n      + (props.scrollTarget !== void 0 ? '' : ' scroll')\n    )\n\n    const attributes = computed(() => (\n      props.scrollTarget !== void 0 ? {} : { tabindex: 0 }\n    ))\n\n    watch(virtualScrollLength, () => {\n      localResetVirtualScroll()\n    })\n\n    watch(() => props.scrollTarget, () => {\n      unconfigureScrollTarget()\n      configureScrollTarget()\n    })\n\n    function getVirtualScrollEl () {\n      return rootRef.value.$el || rootRef.value\n    }\n\n    function getVirtualScrollTarget () {\n      return localScrollTarget\n    }\n\n    function configureScrollTarget () {\n      localScrollTarget = getScrollTarget(getVirtualScrollEl(), props.scrollTarget)\n      localScrollTarget.addEventListener('scroll', onVirtualScrollEvt, listenOpts.passive)\n    }\n\n    function unconfigureScrollTarget () {\n      if (localScrollTarget !== void 0) {\n        localScrollTarget.removeEventListener('scroll', onVirtualScrollEvt, listenOpts.passive)\n        localScrollTarget = void 0\n      }\n    }\n\n    function __getVirtualChildren () {\n      let child = padVirtualScroll(\n        props.type === 'list' ? 'div' : 'tbody',\n        virtualScrollScope.value.map(slots.default)\n      )\n\n      if (slots.before !== void 0) {\n        child = slots.before().concat(child)\n      }\n\n      return hMergeSlot(slots.after, child)\n    }\n\n    onBeforeMount(() => {\n      localResetVirtualScroll()\n    })\n\n    onMounted(() => {\n      configureScrollTarget()\n    })\n\n    onActivated(() => {\n      configureScrollTarget()\n    })\n\n    onDeactivated(() => {\n      unconfigureScrollTarget()\n    })\n\n    onBeforeUnmount(() => {\n      unconfigureScrollTarget()\n    })\n\n    return () => {\n      if (slots.default === void 0) {\n        console.error('QVirtualScroll: default scoped slot is required for rendering')\n        return\n      }\n\n      return props.type === '__qtable'\n        ? getTableMiddle(\n          { ref: rootRef, class: 'q-table__middle ' + classes.value },\n          __getVirtualChildren()\n        )\n        : h(comps[ props.type ], {\n          ...attrs,\n          ref: rootRef,\n          class: [ attrs.class, classes.value ],\n          ...attributes.value\n        }, __getVirtualChildren)\n    }\n  }\n})\n","export function sortDate (a, b) {\n  return (new Date(a)) - (new Date(b))\n}\n\nexport function sortBoolean (a, b) {\n  return a && !b\n    ? -1\n    : (!a && b ? 1 : 0)\n}\n","import { computed } from 'vue'\n\nimport { sortDate } from '../../utils/private/sort.js'\nimport { isNumber, isDate, isObject } from '../../utils/is.js'\n\nexport const useTableSortProps = {\n  sortMethod: Function,\n  binaryStateSort: Boolean,\n  columnSortOrder: {\n    type: String,\n    validator: v => v === 'ad' || v === 'da',\n    default: 'ad'\n  }\n}\n\nexport function useTableSort (props, computedPagination, colList, setPagination) {\n  const columnToSort = computed(() => {\n    const { sortBy } = computedPagination.value\n\n    return sortBy\n      ? colList.value.find(def => def.name === sortBy) || null\n      : null\n  })\n\n  const computedSortMethod = computed(() => (\n    props.sortMethod !== void 0\n      ? props.sortMethod\n      : (data, sortBy, descending) => {\n          const col = colList.value.find(def => def.name === sortBy)\n          if (col === void 0 || col.field === void 0) {\n            return data\n          }\n\n          const\n            dir = descending === true ? -1 : 1,\n            val = typeof col.field === 'function'\n              ? v => col.field(v)\n              : v => v[ col.field ]\n\n          return data.sort((a, b) => {\n            let\n              A = val(a),\n              B = val(b)\n\n            if (col.rawSort !== void 0) {\n              return col.rawSort(A, B, a, b) * dir\n            }\n            if (A === null || A === void 0) {\n              return -1 * dir\n            }\n            if (B === null || B === void 0) {\n              return 1 * dir\n            }\n            if (col.sort !== void 0) {\n              // gets called without rows that have null/undefined as value\n              // due to the above two statements\n              return col.sort(A, B, a, b) * dir\n            }\n            if (isNumber(A) === true && isNumber(B) === true) {\n              return (A - B) * dir\n            }\n            if (isDate(A) === true && isDate(B) === true) {\n              return sortDate(A, B) * dir\n            }\n            if (typeof A === 'boolean' && typeof B === 'boolean') {\n              return (A - B) * dir\n            }\n\n            [ A, B ] = [ A, B ].map(s => (s + '').toLocaleString().toLowerCase())\n\n            return A < B\n              ? -1 * dir\n              : (A === B ? 0 : dir)\n          })\n        }\n  ))\n\n  function sort (col /* String(col name) or Object(col definition) */) {\n    let sortOrder = props.columnSortOrder\n\n    if (isObject(col) === true) {\n      if (col.sortOrder) {\n        sortOrder = col.sortOrder\n      }\n\n      col = col.name\n    }\n    else {\n      const def = colList.value.find(def => def.name === col)\n      if (def !== void 0 && def.sortOrder) {\n        sortOrder = def.sortOrder\n      }\n    }\n\n    let { sortBy, descending } = computedPagination.value\n\n    if (sortBy !== col) {\n      sortBy = col\n      descending = sortOrder === 'da'\n    }\n    else if (props.binaryStateSort === true) {\n      descending = !descending\n    }\n    else if (descending === true) {\n      if (sortOrder === 'ad') {\n        sortBy = null\n      }\n      else {\n        descending = false\n      }\n    }\n    else { // ascending\n      if (sortOrder === 'ad') {\n        descending = true\n      }\n      else {\n        sortBy = null\n      }\n    }\n\n    setPagination({ sortBy, descending, page: 1 })\n  }\n\n  return {\n    columnToSort,\n    computedSortMethod,\n    sort\n  }\n}\n","import { computed, watch, nextTick } from 'vue'\n\nexport const useTableFilterProps = {\n  filter: [ String, Object ],\n  filterMethod: Function\n}\n\nexport function useTableFilter (props, setPagination) {\n  const computedFilterMethod = computed(() => (\n    props.filterMethod !== void 0\n      ? props.filterMethod\n      : (rows, terms, cols, cellValue) => {\n          const lowerTerms = terms ? terms.toLowerCase() : ''\n          return rows.filter(\n            row => cols.some(col => {\n              const val = cellValue(col, row) + ''\n              const haystack = (val === 'undefined' || val === 'null') ? '' : val.toLowerCase()\n              return haystack.indexOf(lowerTerms) !== -1\n            })\n          )\n        }\n  ))\n\n  watch(\n    () => props.filter,\n    () => {\n      nextTick(() => {\n        setPagination({ page: 1 }, true)\n      })\n    },\n    { deep: true }\n  )\n\n  return { computedFilterMethod }\n}\n","import { ref, computed, watch, nextTick } from 'vue'\n\nfunction samePagination (oldPag, newPag) {\n  for (const prop in newPag) {\n    if (newPag[ prop ] !== oldPag[ prop ]) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction fixPagination (p) {\n  if (p.page < 1) {\n    p.page = 1\n  }\n  if (p.rowsPerPage !== void 0 && p.rowsPerPage < 1) {\n    p.rowsPerPage = 0\n  }\n  return p\n}\n\nexport const useTablePaginationProps = {\n  pagination: Object,\n  rowsPerPageOptions: {\n    type: Array,\n    default: () => [ 5, 7, 10, 15, 20, 25, 50, 0 ]\n  },\n\n  'onUpdate:pagination': [ Function, Array ]\n}\n\nexport function useTablePaginationState (vm, getCellValue) {\n  const { props, emit } = vm\n\n  const innerPagination = ref(\n    Object.assign({\n      sortBy: null,\n      descending: false,\n      page: 1,\n      rowsPerPage: props.rowsPerPageOptions.length !== 0\n        ? props.rowsPerPageOptions[ 0 ]\n        : 5\n    }, props.pagination)\n  )\n\n  const computedPagination = computed(() => {\n    const pag = props[ 'onUpdate:pagination' ] !== void 0\n      ? { ...innerPagination.value, ...props.pagination }\n      : innerPagination.value\n\n    return fixPagination(pag)\n  })\n\n  const isServerSide = computed(() => computedPagination.value.rowsNumber !== void 0)\n\n  function sendServerRequest (pagination) {\n    requestServerInteraction({\n      pagination,\n      filter: props.filter\n    })\n  }\n\n  function requestServerInteraction (prop = {}) {\n    nextTick(() => {\n      emit('request', {\n        pagination: prop.pagination || computedPagination.value,\n        filter: prop.filter || props.filter,\n        getCellValue\n      })\n    })\n  }\n\n  function setPagination (val, forceServerRequest) {\n    const newPagination = fixPagination({\n      ...computedPagination.value,\n      ...val\n    })\n\n    if (samePagination(computedPagination.value, newPagination) === true) {\n      if (isServerSide.value === true && forceServerRequest === true) {\n        sendServerRequest(newPagination)\n      }\n      return\n    }\n\n    if (isServerSide.value === true) {\n      sendServerRequest(newPagination)\n      return\n    }\n\n    if (\n      props.pagination !== void 0\n      && props[ 'onUpdate:pagination' ] !== void 0\n    ) {\n      emit('update:pagination', newPagination)\n    }\n    else {\n      innerPagination.value = newPagination\n    }\n  }\n\n  return {\n    innerPagination,\n    computedPagination,\n    isServerSide,\n\n    requestServerInteraction,\n    setPagination\n  }\n}\n\nexport function useTablePagination (vm, innerPagination, computedPagination, isServerSide, setPagination, filteredSortedRowsNumber) {\n  const { props, emit, proxy: { $q } } = vm\n\n  const computedRowsNumber = computed(() => (\n    isServerSide.value === true\n      ? computedPagination.value.rowsNumber || 0\n      : filteredSortedRowsNumber.value\n  ))\n\n  const firstRowIndex = computed(() => {\n    const { page, rowsPerPage } = computedPagination.value\n    return (page - 1) * rowsPerPage\n  })\n\n  const lastRowIndex = computed(() => {\n    const { page, rowsPerPage } = computedPagination.value\n    return page * rowsPerPage\n  })\n\n  const isFirstPage = computed(() => computedPagination.value.page === 1)\n\n  const pagesNumber = computed(() => (\n    computedPagination.value.rowsPerPage === 0\n      ? 1\n      : Math.max(\n        1,\n        Math.ceil(computedRowsNumber.value / computedPagination.value.rowsPerPage)\n      )\n  ))\n\n  const isLastPage = computed(() => (\n    lastRowIndex.value === 0\n      ? true\n      : computedPagination.value.page >= pagesNumber.value\n  ))\n\n  const computedRowsPerPageOptions = computed(() => {\n    const opts = props.rowsPerPageOptions.includes(innerPagination.value.rowsPerPage)\n      ? props.rowsPerPageOptions\n      : [ innerPagination.value.rowsPerPage ].concat(props.rowsPerPageOptions)\n\n    return opts.map(count => ({\n      label: count === 0 ? $q.lang.table.allRows : '' + count,\n      value: count\n    }))\n  })\n\n  watch(pagesNumber, (lastPage, oldLastPage) => {\n    if (lastPage === oldLastPage) {\n      return\n    }\n\n    const currentPage = computedPagination.value.page\n    if (lastPage && !currentPage) {\n      setPagination({ page: 1 })\n    }\n    else if (lastPage < currentPage) {\n      setPagination({ page: lastPage })\n    }\n  })\n\n  function firstPage () {\n    setPagination({ page: 1 })\n  }\n\n  function prevPage () {\n    const { page } = computedPagination.value\n    if (page > 1) {\n      setPagination({ page: page - 1 })\n    }\n  }\n\n  function nextPage () {\n    const { page, rowsPerPage } = computedPagination.value\n    if (lastRowIndex.value > 0 && page * rowsPerPage < computedRowsNumber.value) {\n      setPagination({ page: page + 1 })\n    }\n  }\n\n  function lastPage () {\n    setPagination({ page: pagesNumber.value })\n  }\n\n  if (props[ 'onUpdate:pagination' ] !== void 0) {\n    emit('update:pagination', { ...computedPagination.value })\n  }\n\n  return {\n    firstRowIndex,\n    lastRowIndex,\n    isFirstPage,\n    isLastPage,\n    pagesNumber,\n    computedRowsPerPageOptions,\n    computedRowsNumber,\n\n    firstPage,\n    prevPage,\n    nextPage,\n    lastPage\n  }\n}\n","import { computed } from 'vue'\n\nexport const useTableRowSelectionProps = {\n  selection: {\n    type: String,\n    default: 'none',\n    validator: v => [ 'single', 'multiple', 'none' ].includes(v)\n  },\n  selected: {\n    type: Array,\n    default: () => []\n  }\n}\n\nexport const useTableRowSelectionEmits = [ 'update:selected', 'selection' ]\n\nexport function useTableRowSelection (props, emit, computedRows, getRowKey) {\n  const selectedKeys = computed(() => {\n    const keys = {}\n    props.selected.map(getRowKey.value).forEach(key => {\n      keys[ key ] = true\n    })\n    return keys\n  })\n\n  const hasSelectionMode = computed(() => {\n    return props.selection !== 'none'\n  })\n\n  const singleSelection = computed(() => {\n    return props.selection === 'single'\n  })\n\n  const multipleSelection = computed(() => {\n    return props.selection === 'multiple'\n  })\n\n  const allRowsSelected = computed(() =>\n    computedRows.value.length !== 0 && computedRows.value.every(\n      row => selectedKeys.value[ getRowKey.value(row) ] === true\n    )\n  )\n\n  const someRowsSelected = computed(() =>\n    allRowsSelected.value !== true\n    && computedRows.value.some(row => selectedKeys.value[ getRowKey.value(row) ] === true)\n  )\n\n  const rowsSelectedNumber = computed(() => props.selected.length)\n\n  function isRowSelected (key) {\n    return selectedKeys.value[ key ] === true\n  }\n\n  function clearSelection () {\n    emit('update:selected', [])\n  }\n\n  function updateSelection (keys, rows, added, evt) {\n    emit('selection', { rows, added, keys, evt })\n\n    const payload = singleSelection.value === true\n      ? (added === true ? rows : [])\n      : (\n          added === true\n            ? props.selected.concat(rows)\n            : props.selected.filter(\n              row => keys.includes(getRowKey.value(row)) === false\n            )\n        )\n\n    emit('update:selected', payload)\n  }\n\n  return {\n    hasSelectionMode,\n    singleSelection,\n    multipleSelection,\n    allRowsSelected,\n    someRowsSelected,\n    rowsSelectedNumber,\n\n    isRowSelected,\n    clearSelection,\n    updateSelection\n  }\n}\n","import { ref, watch } from 'vue'\n\nfunction getVal (val) {\n  return Array.isArray(val)\n    ? val.slice()\n    : []\n}\n\nexport const useTableRowExpandProps = {\n  expanded: Array // v-model:expanded\n}\n\nexport const useTableRowExpandEmits = [ 'update:expanded' ]\n\nexport function useTableRowExpand (props, emit) {\n  const innerExpanded = ref(getVal(props.expanded))\n\n  watch(() => props.expanded, val => {\n    innerExpanded.value = getVal(val)\n  })\n\n  function isRowExpanded (key) {\n    return innerExpanded.value.includes(key)\n  }\n\n  function setExpanded (val) {\n    if (props.expanded !== void 0) {\n      emit('update:expanded', val)\n    }\n    else {\n      innerExpanded.value = val\n    }\n  }\n\n  function updateExpanded (key, add) {\n    const target = innerExpanded.value.slice()\n    const index = target.indexOf(key)\n\n    if (add === true) {\n      if (index === -1) {\n        target.push(key)\n        setExpanded(target)\n      }\n    }\n    else if (index !== -1) {\n      target.splice(index, 1)\n      setExpanded(target)\n    }\n  }\n\n  return {\n    isRowExpanded,\n    setExpanded,\n    updateExpanded\n  }\n}\n","import { computed } from 'vue'\n\nimport { isNumber } from '../../utils/is.js'\n\nexport const useTableColumnSelectionProps = {\n  visibleColumns: Array\n}\n\nexport function useTableColumnSelection (props, computedPagination, hasSelectionMode) {\n  const colList = computed(() => {\n    if (props.columns !== void 0) {\n      return props.columns\n    }\n\n    // we infer columns from first row\n    const row = props.rows[ 0 ]\n\n    return row !== void 0\n      ? Object.keys(row).map(name => ({\n        name,\n        label: name.toUpperCase(),\n        field: name,\n        align: isNumber(row[ name ]) ? 'right' : 'left',\n        sortable: true\n      }))\n      : []\n  })\n\n  const computedCols = computed(() => {\n    const { sortBy, descending } = computedPagination.value\n\n    const cols = props.visibleColumns !== void 0\n      ? colList.value.filter(col => col.required === true || props.visibleColumns.includes(col.name) === true)\n      : colList.value\n\n    return cols.map(col => {\n      const align = col.align || 'right'\n      const alignClass = `text-${ align }`\n\n      return {\n        ...col,\n        align,\n        __iconClass: `q-table__sort-icon q-table__sort-icon--${ align }`,\n        __thClass: alignClass\n          + (col.headerClasses !== void 0 ? ' ' + col.headerClasses : '')\n          + (col.sortable === true ? ' sortable' : '')\n          + (col.name === sortBy ? ` sorted ${ descending === true ? 'sort-desc' : '' }` : ''),\n\n        __tdStyle: col.style !== void 0\n          ? (\n              typeof col.style !== 'function'\n                ? () => col.style\n                : col.style\n            )\n          : () => null,\n\n        __tdClass: col.classes !== void 0\n          ? (\n              typeof col.classes !== 'function'\n                ? () => alignClass + ' ' + col.classes\n                : row => alignClass + ' ' + col.classes(row)\n            )\n          : () => alignClass\n      }\n    })\n  })\n\n  const computedColsMap = computed(() => {\n    const names = {}\n    computedCols.value.forEach(col => {\n      names[ col.name ] = col\n    })\n    return names\n  })\n\n  const computedColspan = computed(() => {\n    return props.tableColspan !== void 0\n      ? props.tableColspan\n      : computedCols.value.length + (hasSelectionMode.value === true ? 1 : 0)\n  })\n\n  return {\n    colList,\n    computedCols,\n    computedColsMap,\n    computedColspan\n  }\n}\n","import { h, ref, computed, watch, getCurrentInstance } from 'vue'\n\nimport QTh from './QTh.js'\n\nimport QSeparator from '../separator/QSeparator.js'\nimport QIcon from '../icon/QIcon.js'\nimport QVirtualScroll from '../virtual-scroll/QVirtualScroll.js'\nimport QSelect from '../select/QSelect.js'\nimport QLinearProgress from '../linear-progress/QLinearProgress.js'\nimport QCheckbox from '../checkbox/QCheckbox.js'\nimport QBtn from '../btn/QBtn.js'\n\nimport getTableMiddle from './get-table-middle.js'\n\nimport useDark, { useDarkProps } from '../../composables/private/use-dark.js'\nimport { commonVirtPropsList } from '../virtual-scroll/use-virtual-scroll.js'\nimport useFullscreen, { useFullscreenProps, useFullscreenEmits } from '../../composables/private/use-fullscreen.js'\n\nimport { useTableSort, useTableSortProps } from './table-sort.js'\nimport { useTableFilter, useTableFilterProps } from './table-filter.js'\nimport { useTablePaginationState, useTablePagination, useTablePaginationProps } from './table-pagination.js'\nimport { useTableRowSelection, useTableRowSelectionProps, useTableRowSelectionEmits } from './table-row-selection.js'\nimport { useTableRowExpand, useTableRowExpandProps, useTableRowExpandEmits } from './table-row-expand.js'\nimport { useTableColumnSelection, useTableColumnSelectionProps } from './table-column-selection.js'\n\nimport { injectProp, injectMultipleProps } from '../../utils/private/inject-obj-prop.js'\nimport { createComponent } from '../../utils/private/create.js'\n\nconst bottomClass = 'q-table__bottom row items-center'\n\nconst commonVirtPropsObj = {}\ncommonVirtPropsList.forEach(p => { commonVirtPropsObj[ p ] = {} })\n\nexport default createComponent({\n  name: 'QTable',\n\n  props: {\n    rows: {\n      type: Array,\n      default: () => []\n    },\n    rowKey: {\n      type: [ String, Function ],\n      default: 'id'\n    },\n\n    columns: Array,\n    loading: Boolean,\n\n    iconFirstPage: String,\n    iconPrevPage: String,\n    iconNextPage: String,\n    iconLastPage: String,\n\n    title: String,\n\n    hideHeader: Boolean,\n\n    grid: Boolean,\n    gridHeader: Boolean,\n\n    dense: Boolean,\n    flat: Boolean,\n    bordered: Boolean,\n    square: Boolean,\n    separator: {\n      type: String,\n      default: 'horizontal',\n      validator: v => [ 'horizontal', 'vertical', 'cell', 'none' ].includes(v)\n    },\n    wrapCells: Boolean,\n\n    virtualScroll: Boolean,\n    virtualScrollTarget: {\n      default: void 0\n    },\n    ...commonVirtPropsObj,\n\n    noDataLabel: String,\n    noResultsLabel: String,\n    loadingLabel: String,\n    selectedRowsLabel: Function,\n    rowsPerPageLabel: String,\n    paginationLabel: Function,\n\n    color: {\n      type: String,\n      default: 'grey-8'\n    },\n\n    titleClass: [ String, Array, Object ],\n    tableStyle: [ String, Array, Object ],\n    tableClass: [ String, Array, Object ],\n    tableHeaderStyle: [ String, Array, Object ],\n    tableHeaderClass: [ String, Array, Object ],\n    cardContainerClass: [ String, Array, Object ],\n    cardContainerStyle: [ String, Array, Object ],\n    cardStyle: [ String, Array, Object ],\n    cardClass: [ String, Array, Object ],\n\n    hideBottom: Boolean,\n    hideSelectedBanner: Boolean,\n    hideNoData: Boolean,\n    hidePagination: Boolean,\n\n    onRowClick: Function,\n    onRowDblclick: Function,\n    onRowContextmenu: Function,\n\n    ...useDarkProps,\n    ...useFullscreenProps,\n\n    ...useTableColumnSelectionProps,\n    ...useTableFilterProps,\n    ...useTablePaginationProps,\n    ...useTableRowExpandProps,\n    ...useTableRowSelectionProps,\n    ...useTableSortProps\n  },\n\n  emits: [\n    'request', 'virtualScroll',\n    ...useFullscreenEmits,\n    ...useTableRowExpandEmits,\n    ...useTableRowSelectionEmits\n  ],\n\n  setup (props, { slots, emit }) {\n    const vm = getCurrentInstance()\n    const { proxy: { $q } } = vm\n\n    const isDark = useDark(props, $q)\n    const { inFullscreen, toggleFullscreen } = useFullscreen()\n\n    const getRowKey = computed(() => (\n      typeof props.rowKey === 'function'\n        ? props.rowKey\n        : row => row[ props.rowKey ]\n    ))\n\n    const rootRef = ref(null)\n    const virtScrollRef = ref(null)\n    const hasVirtScroll = computed(() => props.grid !== true && props.virtualScroll === true)\n\n    const cardDefaultClass = computed(() =>\n      ' q-table__card'\n      + (isDark.value === true ? ' q-table__card--dark q-dark' : '')\n      + (props.square === true ? ' q-table--square' : '')\n      + (props.flat === true ? ' q-table--flat' : '')\n      + (props.bordered === true ? ' q-table--bordered' : '')\n    )\n\n    const __containerClass = computed(() =>\n      `q-table__container q-table--${ props.separator }-separator column no-wrap`\n      + (props.grid === true ? ' q-table--grid' : cardDefaultClass.value)\n      + (isDark.value === true ? ' q-table--dark' : '')\n      + (props.dense === true ? ' q-table--dense' : '')\n      + (props.wrapCells === false ? ' q-table--no-wrap' : '')\n      + (inFullscreen.value === true ? ' fullscreen scroll' : '')\n    )\n\n    const containerClass = computed(() =>\n      __containerClass.value + (props.loading === true ? ' q-table--loading' : '')\n    )\n\n    watch(\n      () => props.tableStyle + props.tableClass + props.tableHeaderStyle + props.tableHeaderClass + __containerClass.value,\n      () => { hasVirtScroll.value === true && virtScrollRef.value !== null && virtScrollRef.value.reset() }\n    )\n\n    const {\n      innerPagination,\n      computedPagination,\n      isServerSide,\n\n      requestServerInteraction,\n      setPagination\n    } = useTablePaginationState(vm, getCellValue)\n\n    const { computedFilterMethod } = useTableFilter(props, setPagination)\n    const { isRowExpanded, setExpanded, updateExpanded } = useTableRowExpand(props, emit)\n\n    const filteredSortedRows = computed(() => {\n      let rows = props.rows\n\n      if (isServerSide.value === true || rows.length === 0) {\n        return rows\n      }\n\n      const { sortBy, descending } = computedPagination.value\n\n      if (props.filter) {\n        rows = computedFilterMethod.value(rows, props.filter, computedCols.value, getCellValue)\n      }\n\n      if (columnToSort.value !== null) {\n        rows = computedSortMethod.value(\n          props.rows === rows ? rows.slice() : rows,\n          sortBy,\n          descending\n        )\n      }\n\n      return rows\n    })\n\n    const filteredSortedRowsNumber = computed(() => filteredSortedRows.value.length)\n\n    const computedRows = computed(() => {\n      let rows = filteredSortedRows.value\n\n      if (isServerSide.value === true) {\n        return rows\n      }\n\n      const { rowsPerPage } = computedPagination.value\n\n      if (rowsPerPage !== 0) {\n        if (firstRowIndex.value === 0 && props.rows !== rows) {\n          if (rows.length > lastRowIndex.value) {\n            rows = rows.slice(0, lastRowIndex.value)\n          }\n        }\n        else {\n          rows = rows.slice(firstRowIndex.value, lastRowIndex.value)\n        }\n      }\n\n      return rows\n    })\n\n    const {\n      hasSelectionMode,\n      singleSelection,\n      multipleSelection,\n      allRowsSelected,\n      someRowsSelected,\n      rowsSelectedNumber,\n\n      isRowSelected,\n      clearSelection,\n      updateSelection\n    } = useTableRowSelection(props, emit, computedRows, getRowKey)\n\n    const { colList, computedCols, computedColsMap, computedColspan } = useTableColumnSelection(props, computedPagination, hasSelectionMode)\n\n    const { columnToSort, computedSortMethod, sort } = useTableSort(props, computedPagination, colList, setPagination)\n\n    const {\n      firstRowIndex,\n      lastRowIndex,\n      isFirstPage,\n      isLastPage,\n      pagesNumber,\n      computedRowsPerPageOptions,\n      computedRowsNumber,\n\n      firstPage,\n      prevPage,\n      nextPage,\n      lastPage\n    } = useTablePagination(vm, innerPagination, computedPagination, isServerSide, setPagination, filteredSortedRowsNumber)\n\n    const nothingToDisplay = computed(() => computedRows.value.length === 0)\n\n    const virtProps = computed(() => {\n      const acc = {}\n\n      commonVirtPropsList\n        .forEach(p => { acc[ p ] = props[ p ] })\n\n      if (acc.virtualScrollItemSize === void 0) {\n        acc.virtualScrollItemSize = props.dense === true ? 28 : 48\n      }\n\n      return acc\n    })\n\n    function resetVirtualScroll () {\n      hasVirtScroll.value === true && virtScrollRef.value.reset()\n    }\n\n    function getBody () {\n      if (props.grid === true) {\n        return getGridBody()\n      }\n\n      const header = props.hideHeader !== true ? getTHead : null\n\n      if (hasVirtScroll.value === true) {\n        const topRow = slots[ 'top-row' ]\n        const bottomRow = slots[ 'bottom-row' ]\n\n        const virtSlots = {\n          default: props => getTBodyTR(props.item, slots.body, props.index)\n        }\n\n        if (topRow !== void 0) {\n          const topContent = h('tbody', topRow({ cols: computedCols.value }))\n\n          virtSlots.before = header === null\n            ? () => topContent\n            : () => [ header() ].concat(topContent)\n        }\n        else if (header !== null) {\n          virtSlots.before = header\n        }\n\n        if (bottomRow !== void 0) {\n          virtSlots.after = () => h('tbody', bottomRow({ cols: computedCols.value }))\n        }\n\n        return h(QVirtualScroll, {\n          ref: virtScrollRef,\n          class: props.tableClass,\n          style: props.tableStyle,\n          ...virtProps.value,\n          scrollTarget: props.virtualScrollTarget,\n          items: computedRows.value,\n          type: '__qtable',\n          tableColspan: computedColspan.value,\n          onVirtualScroll: onVScroll\n        }, virtSlots)\n      }\n\n      const child = [\n        getTBody()\n      ]\n\n      if (header !== null) {\n        child.unshift(header())\n      }\n\n      return getTableMiddle({\n        class: [ 'q-table__middle scroll', props.tableClass ],\n        style: props.tableStyle\n      }, child)\n    }\n\n    function scrollTo (toIndex, edge) {\n      if (virtScrollRef.value !== null) {\n        virtScrollRef.value.scrollTo(toIndex, edge)\n        return\n      }\n\n      toIndex = parseInt(toIndex, 10)\n      const rowEl = rootRef.value.querySelector(`tbody tr:nth-of-type(${ toIndex + 1 })`)\n\n      if (rowEl !== null) {\n        const scrollTarget = rootRef.value.querySelector('.q-table__middle.scroll')\n        const offsetTop = rowEl.offsetTop - props.virtualScrollStickySizeStart\n        const direction = offsetTop < scrollTarget.scrollTop ? 'decrease' : 'increase'\n\n        scrollTarget.scrollTop = offsetTop\n\n        emit('virtualScroll', {\n          index: toIndex,\n          from: 0,\n          to: innerPagination.value.rowsPerPage - 1,\n          direction\n        })\n      }\n    }\n\n    function onVScroll (info) {\n      emit('virtualScroll', info)\n    }\n\n    function getProgress () {\n      return [\n        h(QLinearProgress, {\n          class: 'q-table__linear-progress',\n          color: props.color,\n          dark: isDark.value,\n          indeterminate: true,\n          trackColor: 'transparent'\n        })\n      ]\n    }\n\n    function getTBodyTR (row, bodySlot, pageIndex) {\n      const\n        key = getRowKey.value(row),\n        selected = isRowSelected(key)\n\n      if (bodySlot !== void 0) {\n        return bodySlot(\n          getBodyScope({\n            key,\n            row,\n            pageIndex,\n            __trClass: selected ? 'selected' : ''\n          })\n        )\n      }\n\n      const\n        bodyCell = slots[ 'body-cell' ],\n        child = computedCols.value.map(col => {\n          const\n            bodyCellCol = slots[ `body-cell-${ col.name }` ],\n            slot = bodyCellCol !== void 0 ? bodyCellCol : bodyCell\n\n          return slot !== void 0\n            ? slot(getBodyCellScope({ key, row, pageIndex, col }))\n            : h('td', {\n              class: col.__tdClass(row),\n              style: col.__tdStyle(row)\n            }, getCellValue(col, row))\n        })\n\n      if (hasSelectionMode.value === true) {\n        const slot = slots[ 'body-selection' ]\n        const content = slot !== void 0\n          ? slot(getBodySelectionScope({ key, row, pageIndex }))\n          : [\n              h(QCheckbox, {\n                modelValue: selected,\n                color: props.color,\n                dark: isDark.value,\n                dense: props.dense,\n                'onUpdate:modelValue': (adding, evt) => {\n                  updateSelection([ key ], [ row ], adding, evt)\n                }\n              })\n            ]\n\n        child.unshift(\n          h('td', { class: 'q-table--col-auto-width' }, content)\n        )\n      }\n\n      const data = { key, class: { selected } }\n\n      if (props.onRowClick !== void 0) {\n        data.class[ 'cursor-pointer' ] = true\n        data.onClick = evt => {\n          emit('RowClick', evt, row, pageIndex)\n        }\n      }\n\n      if (props.onRowDblclick !== void 0) {\n        data.class[ 'cursor-pointer' ] = true\n        data.onDblclick = evt => {\n          emit('RowDblclick', evt, row, pageIndex)\n        }\n      }\n\n      if (props.onRowContextmenu !== void 0) {\n        data.class[ 'cursor-pointer' ] = true\n        data.onContextmenu = evt => {\n          emit('RowContextmenu', evt, row, pageIndex)\n        }\n      }\n\n      return h('tr', data, child)\n    }\n\n    function getTBody () {\n      const\n        body = slots.body,\n        topRow = slots[ 'top-row' ],\n        bottomRow = slots[ 'bottom-row' ]\n\n      let child = computedRows.value.map(\n        (row, pageIndex) => getTBodyTR(row, body, pageIndex)\n      )\n\n      if (topRow !== void 0) {\n        child = topRow({ cols: computedCols.value }).concat(child)\n      }\n      if (bottomRow !== void 0) {\n        child = child.concat(bottomRow({ cols: computedCols.value }))\n      }\n\n      return h('tbody', child)\n    }\n\n    function getBodyScope (data) {\n      injectBodyCommonScope(data)\n\n      data.cols = data.cols.map(\n        col => injectProp({ ...col }, 'value', () => getCellValue(col, data.row))\n      )\n\n      return data\n    }\n\n    function getBodyCellScope (data) {\n      injectBodyCommonScope(data)\n      injectProp(data, 'value', () => getCellValue(data.col, data.row))\n      return data\n    }\n\n    function getBodySelectionScope (data) {\n      injectBodyCommonScope(data)\n      return data\n    }\n\n    function injectBodyCommonScope (data) {\n      Object.assign(data, {\n        cols: computedCols.value,\n        colsMap: computedColsMap.value,\n        sort,\n        rowIndex: firstRowIndex.value + data.pageIndex,\n        color: props.color,\n        dark: isDark.value,\n        dense: props.dense\n      })\n\n      hasSelectionMode.value === true && injectProp(\n        data,\n        'selected',\n        () => isRowSelected(data.key),\n        (adding, evt) => {\n          updateSelection([ data.key ], [ data.row ], adding, evt)\n        }\n      )\n\n      injectProp(\n        data,\n        'expand',\n        () => isRowExpanded(data.key),\n        adding => { updateExpanded(data.key, adding) }\n      )\n    }\n\n    function getCellValue (col, row) {\n      const val = typeof col.field === 'function' ? col.field(row) : row[ col.field ]\n      return col.format !== void 0 ? col.format(val, row) : val\n    }\n\n    const marginalsScope = computed(() => ({\n      pagination: computedPagination.value,\n      pagesNumber: pagesNumber.value,\n      isFirstPage: isFirstPage.value,\n      isLastPage: isLastPage.value,\n      firstPage,\n      prevPage,\n      nextPage,\n      lastPage,\n\n      inFullscreen: inFullscreen.value,\n      toggleFullscreen\n    }))\n\n    function getTopDiv () {\n      const\n        top = slots.top,\n        topLeft = slots[ 'top-left' ],\n        topRight = slots[ 'top-right' ],\n        topSelection = slots[ 'top-selection' ],\n        hasSelection = hasSelectionMode.value === true\n          && topSelection !== void 0\n          && rowsSelectedNumber.value > 0,\n        topClass = 'q-table__top relative-position row items-center'\n\n      if (top !== void 0) {\n        return h('div', { class: topClass }, [ top(marginalsScope.value) ])\n      }\n\n      let child\n\n      if (hasSelection === true) {\n        child = topSelection(marginalsScope.value).slice()\n      }\n      else {\n        child = []\n\n        if (topLeft !== void 0) {\n          child.push(\n            h('div', { class: 'q-table__control' }, [\n              topLeft(marginalsScope.value)\n            ])\n          )\n        }\n        else if (props.title) {\n          child.push(\n            h('div', { class: 'q-table__control' }, [\n              h('div', {\n                class: [ 'q-table__title', props.titleClass ]\n              }, props.title)\n            ])\n          )\n        }\n      }\n\n      if (topRight !== void 0) {\n        child.push(\n          h('div', { class: 'q-table__separator col' })\n        )\n        child.push(\n          h('div', { class: 'q-table__control' }, [\n            topRight(marginalsScope.value)\n          ])\n        )\n      }\n\n      if (child.length === 0) {\n        return\n      }\n\n      return h('div', { class: topClass }, child)\n    }\n\n    const headerSelectedValue = computed(() => (\n      someRowsSelected.value === true\n        ? null\n        : allRowsSelected.value\n    ))\n\n    function getTHead () {\n      const child = getTHeadTR()\n\n      if (props.loading === true && slots.loading === void 0) {\n        child.push(\n          h('tr', { class: 'q-table__progress' }, [\n            h('th', {\n              class: 'relative-position',\n              colspan: computedColspan.value\n            }, getProgress())\n          ])\n        )\n      }\n\n      return h('thead', child)\n    }\n\n    function getTHeadTR () {\n      const\n        header = slots.header,\n        headerCell = slots[ 'header-cell' ]\n\n      if (header !== void 0) {\n        return header(\n          getHeaderScope({ header: true })\n        ).slice()\n      }\n\n      const child = computedCols.value.map(col => {\n        const\n          headerCellCol = slots[ `header-cell-${ col.name }` ],\n          slot = headerCellCol !== void 0 ? headerCellCol : headerCell,\n          props = getHeaderScope({ col })\n\n        return slot !== void 0\n          ? slot(props)\n          : h(QTh, {\n            key: col.name,\n            props\n          }, () => col.label)\n      })\n\n      if (singleSelection.value === true && props.grid !== true) {\n        child.unshift(\n          h('th', { class: 'q-table--col-auto-width' }, ' ')\n        )\n      }\n      else if (multipleSelection.value === true) {\n        const slot = slots[ 'header-selection' ]\n        const content = slot !== void 0\n          ? slot(getHeaderScope({}))\n          : [\n              h(QCheckbox, {\n                color: props.color,\n                modelValue: headerSelectedValue.value,\n                dark: isDark.value,\n                dense: props.dense,\n                'onUpdate:modelValue': onMultipleSelectionSet\n              })\n            ]\n\n        child.unshift(\n          h('th', { class: 'q-table--col-auto-width' }, content)\n        )\n      }\n\n      return [\n        h('tr', {\n          class: props.tableHeaderClass,\n          style: props.tableHeaderStyle\n        }, child)\n      ]\n    }\n\n    function getHeaderScope (data) {\n      Object.assign(data, {\n        cols: computedCols.value,\n        sort,\n        colsMap: computedColsMap.value,\n        color: props.color,\n        dark: isDark.value,\n        dense: props.dense\n      })\n\n      if (multipleSelection.value === true) {\n        injectProp(\n          data,\n          'selected',\n          () => headerSelectedValue.value,\n          onMultipleSelectionSet\n        )\n      }\n\n      return data\n    }\n\n    function onMultipleSelectionSet (val) {\n      if (someRowsSelected.value === true) {\n        val = false\n      }\n\n      updateSelection(\n        computedRows.value.map(getRowKey.value),\n        computedRows.value,\n        val\n      )\n    }\n\n    const navIcon = computed(() => {\n      const ico = [\n        props.iconFirstPage || $q.iconSet.table.firstPage,\n        props.iconPrevPage || $q.iconSet.table.prevPage,\n        props.iconNextPage || $q.iconSet.table.nextPage,\n        props.iconLastPage || $q.iconSet.table.lastPage\n      ]\n      return $q.lang.rtl === true ? ico.reverse() : ico\n    })\n\n    function getBottomDiv () {\n      if (props.hideBottom === true) {\n        return\n      }\n\n      if (nothingToDisplay.value === true) {\n        if (props.hideNoData === true) {\n          return\n        }\n\n        const message = props.loading === true\n          ? props.loadingLabel || $q.lang.table.loading\n          : (props.filter ? props.noResultsLabel || $q.lang.table.noResults : props.noDataLabel || $q.lang.table.noData)\n\n        const noData = slots[ 'no-data' ]\n        const children = noData !== void 0\n          ? [ noData({ message, icon: $q.iconSet.table.warning, filter: props.filter }) ]\n          : [\n              h(QIcon, {\n                class: 'q-table__bottom-nodata-icon',\n                name: $q.iconSet.table.warning\n              }),\n              message\n            ]\n\n        return h('div', { class: bottomClass + ' q-table__bottom--nodata' }, children)\n      }\n\n      const bottom = slots.bottom\n\n      if (bottom !== void 0) {\n        return h('div', { class: bottomClass }, [ bottom(marginalsScope.value) ])\n      }\n\n      const child = props.hideSelectedBanner !== true && hasSelectionMode.value === true && rowsSelectedNumber.value > 0\n        ? [\n            h('div', { class: 'q-table__control' }, [\n              h('div', [\n                (props.selectedRowsLabel || $q.lang.table.selectedRecords)(rowsSelectedNumber.value)\n              ])\n            ])\n          ]\n        : []\n\n      if (props.hidePagination !== true) {\n        return h('div', {\n          class: bottomClass + ' justify-end'\n        }, getPaginationDiv(child))\n      }\n\n      if (child.length !== 0) {\n        return h('div', { class: bottomClass }, child)\n      }\n    }\n\n    function onPagSelection (pag) {\n      setPagination({\n        page: 1,\n        rowsPerPage: pag.value\n      })\n    }\n\n    function getPaginationDiv (child) {\n      let control\n      const\n        { rowsPerPage } = computedPagination.value,\n        paginationLabel = props.paginationLabel || $q.lang.table.pagination,\n        paginationSlot = slots.pagination,\n        hasOpts = props.rowsPerPageOptions.length > 1\n\n      child.push(\n        h('div', { class: 'q-table__separator col' })\n      )\n\n      if (hasOpts === true) {\n        child.push(\n          h('div', { class: 'q-table__control' }, [\n            h('span', { class: 'q-table__bottom-item' }, [\n              props.rowsPerPageLabel || $q.lang.table.recordsPerPage\n            ]),\n            h(QSelect, {\n              class: 'q-table__select inline q-table__bottom-item',\n              color: props.color,\n              modelValue: rowsPerPage,\n              options: computedRowsPerPageOptions.value,\n              displayValue: rowsPerPage === 0\n                ? $q.lang.table.allRows\n                : rowsPerPage,\n              dark: isDark.value,\n              borderless: true,\n              dense: true,\n              optionsDense: true,\n              optionsCover: true,\n              'onUpdate:modelValue': onPagSelection\n            })\n          ])\n        )\n      }\n\n      if (paginationSlot !== void 0) {\n        control = paginationSlot(marginalsScope.value)\n      }\n      else {\n        control = [\n          h('span', rowsPerPage !== 0 ? { class: 'q-table__bottom-item' } : {}, [\n            rowsPerPage\n              ? paginationLabel(firstRowIndex.value + 1, Math.min(lastRowIndex.value, computedRowsNumber.value), computedRowsNumber.value)\n              : paginationLabel(1, filteredSortedRowsNumber.value, computedRowsNumber.value)\n          ])\n        ]\n\n        if (rowsPerPage !== 0 && pagesNumber.value > 1) {\n          const btnProps = {\n            color: props.color,\n            round: true,\n            dense: true,\n            flat: true\n          }\n\n          if (props.dense === true) {\n            btnProps.size = 'sm'\n          }\n\n          pagesNumber.value > 2 && control.push(\n            h(QBtn, {\n              key: 'pgFirst',\n              ...btnProps,\n              icon: navIcon.value[ 0 ],\n              disable: isFirstPage.value,\n              onClick: firstPage\n            })\n          )\n\n          control.push(\n            h(QBtn, {\n              key: 'pgPrev',\n              ...btnProps,\n              icon: navIcon.value[ 1 ],\n              disable: isFirstPage.value,\n              onClick: prevPage\n            }),\n\n            h(QBtn, {\n              key: 'pgNext',\n              ...btnProps,\n              icon: navIcon.value[ 2 ],\n              disable: isLastPage.value,\n              onClick: nextPage\n            })\n          )\n\n          pagesNumber.value > 2 && control.push(\n            h(QBtn, {\n              key: 'pgLast',\n              ...btnProps,\n              icon: navIcon.value[ 3 ],\n              disable: isLastPage.value,\n              onClick: lastPage\n            })\n          )\n        }\n      }\n\n      child.push(\n        h('div', { class: 'q-table__control' }, control)\n      )\n\n      return child\n    }\n\n    function getGridHeader () {\n      const child = props.gridHeader === true\n        ? [\n            h('table', { class: 'q-table' }, [\n              getTHead(h)\n            ])\n          ]\n        : (\n            props.loading === true && slots.loading === void 0\n              ? getProgress(h)\n              : void 0\n          )\n\n      return h('div', { class: 'q-table__middle' }, child)\n    }\n\n    function getGridBody () {\n      const item = slots.item !== void 0\n        ? slots.item\n        : scope => {\n          const child = scope.cols.map(\n            col => h('div', { class: 'q-table__grid-item-row' }, [\n              h('div', { class: 'q-table__grid-item-title' }, [ col.label ]),\n              h('div', { class: 'q-table__grid-item-value' }, [ col.value ])\n            ])\n          )\n\n          if (hasSelectionMode.value === true) {\n            const slot = slots[ 'body-selection' ]\n            const content = slot !== void 0\n              ? slot(scope)\n              : [\n                  h(QCheckbox, {\n                    modelValue: scope.selected,\n                    color: props.color,\n                    dark: isDark.value,\n                    dense: props.dense,\n                    'onUpdate:modelValue': (adding, evt) => {\n                      updateSelection([ scope.key ], [ scope.row ], adding, evt)\n                    }\n                  })\n                ]\n\n            child.unshift(\n              h('div', { class: 'q-table__grid-item-row' }, content),\n              h(QSeparator, { dark: isDark.value })\n            )\n          }\n\n          const data = {\n            class: [\n              'q-table__grid-item-card' + cardDefaultClass.value,\n              props.cardClass\n            ],\n            style: props.cardStyle\n          }\n\n          if (\n            props.onRowClick !== void 0\n            || props.onRowDblclick !== void 0\n          ) {\n            data.class[ 0 ] += ' cursor-pointer'\n\n            if (props.onRowClick !== void 0) {\n              data.onClick = evt => {\n                emit('RowClick', evt, scope.row, scope.pageIndex)\n              }\n            }\n\n            if (props.onRowDblclick !== void 0) {\n              data.onDblclick = evt => {\n                emit('RowDblclick', evt, scope.row, scope.pageIndex)\n              }\n            }\n          }\n\n          return h('div', {\n            class: 'q-table__grid-item col-xs-12 col-sm-6 col-md-4 col-lg-3'\n              + (scope.selected === true ? ' q-table__grid-item--selected' : '')\n          }, [\n            h('div', data, child)\n          ])\n        }\n\n      return h('div', {\n        class: [\n          'q-table__grid-content row',\n          props.cardContainerClass\n        ],\n        style: props.cardContainerStyle\n      }, computedRows.value.map((row, pageIndex) => {\n        return item(getBodyScope({\n          key: getRowKey.value(row),\n          row,\n          pageIndex\n        }))\n      }))\n    }\n\n    // expose public methods and needed computed props\n    Object.assign(vm.proxy, {\n      requestServerInteraction,\n      setPagination,\n      firstPage,\n      prevPage,\n      nextPage,\n      lastPage,\n      isRowSelected,\n      clearSelection,\n      isRowExpanded,\n      setExpanded,\n      sort,\n      resetVirtualScroll,\n      scrollTo,\n      getCellValue\n    })\n\n    injectMultipleProps(vm.proxy, {\n      filteredSortedRows: () => filteredSortedRows.value,\n      computedRows: () => computedRows.value,\n      computedRowsNumber: () => computedRowsNumber.value\n    })\n\n    return () => {\n      const child = [ getTopDiv() ]\n      const data = { ref: rootRef, class: containerClass.value }\n\n      if (props.grid === true) {\n        child.push(getGridHeader())\n      }\n      else {\n        Object.assign(data, {\n          class: [ data.class, props.cardClass ],\n          style: props.cardStyle\n        })\n      }\n\n      child.push(\n        getBody(),\n        getBottomDiv()\n      )\n\n      if (props.loading === true && slots.loading !== void 0) {\n        child.push(\n          slots.loading()\n        )\n      }\n\n      return h('div', data, child)\n    }\n  }\n})\n"],"names":["QTh","createComponent","props","slots","emit","vm","getCurrentInstance","$q","onClick","evt","h","hSlot","col","child","name","action","hUniqueSlot","QIcon","data","separatorValues","QMarkupTable","useDarkProps","v","isDark","useDark","classes","computed","getTableMiddle","content","comps","QList","typeOptions","QVirtualScroll","useVirtualScrollProps","attrs","localScrollTarget","rootRef","ref","virtualScrollLength","virtualScrollSliceRange","localResetVirtualScroll","padVirtualScroll","onVirtualScrollEvt","useVirtualScroll","getVirtualScrollTarget","getVirtualScrollEl","virtualScrollScope","mapFn","item","i","attributes","watch","unconfigureScrollTarget","configureScrollTarget","getScrollTarget","listenOpts","__getVirtualChildren","hMergeSlot","onBeforeMount","onMounted","onActivated","onDeactivated","onBeforeUnmount","sortDate","a","b","useTableSortProps","useTableSort","computedPagination","colList","setPagination","columnToSort","sortBy","def","computedSortMethod","descending","dir","val","A","B","isNumber","isDate","s","sort","sortOrder","isObject","useTableFilterProps","useTableFilter","computedFilterMethod","rows","terms","cols","cellValue","lowerTerms","row","nextTick","samePagination","oldPag","newPag","prop","fixPagination","p","useTablePaginationProps","useTablePaginationState","getCellValue","innerPagination","pag","isServerSide","sendServerRequest","pagination","requestServerInteraction","forceServerRequest","newPagination","useTablePagination","filteredSortedRowsNumber","computedRowsNumber","firstRowIndex","page","rowsPerPage","lastRowIndex","isFirstPage","pagesNumber","isLastPage","computedRowsPerPageOptions","count","lastPage","oldLastPage","currentPage","firstPage","prevPage","nextPage","useTableRowSelectionProps","useTableRowSelectionEmits","useTableRowSelection","computedRows","getRowKey","selectedKeys","keys","key","hasSelectionMode","singleSelection","multipleSelection","allRowsSelected","someRowsSelected","rowsSelectedNumber","isRowSelected","clearSelection","updateSelection","added","payload","getVal","useTableRowExpandProps","useTableRowExpandEmits","useTableRowExpand","innerExpanded","isRowExpanded","setExpanded","updateExpanded","add","target","index","useTableColumnSelectionProps","useTableColumnSelection","computedCols","align","alignClass","computedColsMap","names","computedColspan","bottomClass","commonVirtPropsObj","commonVirtPropsList","QTable","useFullscreenProps","useFullscreenEmits","inFullscreen","toggleFullscreen","useFullscreen","virtScrollRef","hasVirtScroll","cardDefaultClass","__containerClass","containerClass","filteredSortedRows","nothingToDisplay","virtProps","acc","resetVirtualScroll","getBody","getGridBody","header","getTHead","topRow","bottomRow","virtSlots","getTBodyTR","topContent","onVScroll","getTBody","scrollTo","toIndex","edge","rowEl","scrollTarget","offsetTop","direction","info","getProgress","QLinearProgress","bodySlot","pageIndex","selected","getBodyScope","bodyCell","bodyCellCol","slot","getBodyCellScope","getBodySelectionScope","QCheckbox","adding","body","injectBodyCommonScope","injectProp","marginalsScope","getTopDiv","top","topLeft","topRight","topSelection","hasSelection","topClass","headerSelectedValue","getTHeadTR","headerCell","getHeaderScope","headerCellCol","onMultipleSelectionSet","navIcon","ico","getBottomDiv","message","noData","children","bottom","getPaginationDiv","onPagSelection","control","paginationLabel","paginationSlot","hasOpts","QSelect","btnProps","QBtn","getGridHeader","scope","QSeparator","injectMultipleProps"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11]}