{"version":3,"file":"DashboardGroup-YixOHMFW.js","sources":["../../src/components/Poll.vue","../../src/views/dashboard/DashboardGroup.vue"],"sourcesContent":["<template>\n  <q-card>\n    <!-- {{ poll }} -->\n    <q-card-section>\n      <div\n        class=\"text-h6\"\n        v-text=\"poll.question\"\n      />\n      <p class=\"subtitle\">{{ authorName?.name }} on {{ poll.date }}</p>\n      <div\n        v-for=\"(item, idx) in poll.options\"\n        class=\"text-left\"\n        :key=\"idx\"\n      >\n        <b>{{ item.votes }} votes:</b>\n        {{ item.option }}\n      </div>\n    </q-card-section>\n  </q-card>\n</template>\n\n<script setup lang=\"ts\">\nimport { PropType } from 'vue'\nimport { Poll } from '@/utils/types'\nimport { useStore } from '@/store'\nimport { computed } from 'vue'\n\nconst props = defineProps({\n  poll: {\n    type: Object as PropType<Poll>,\n    required: true,\n  },\n})\n\nconst store = useStore()\nconsole.log(store.authorsSettings)\n// Maybe also filter on show?\nconst authorName = computed(() => store.authorsSettings.find((author) => props.poll.authorId === author.index))\n</script>\n\n<style scoped lang=\"scss\">\n.subtitle {\n  font-size: 0.8rem;\n}\n\n.q-card {\n  // fix auto margin for q-card, kinda annoying. Maybe just a specific class\n  // margin: 0 !important;\n}\n\nli {\n  /* list-style-type: none; */\n  /* padding: 0; */\n  /* margin: 0; */\n}\n</style>\n","<template>\n  <div class=\"row dashboardView\">\n    <div class=\"col-12\">\n      <DashboardCard title=\"Events\">\n        <EventsTable :data=\"events\" />\n      </DashboardCard>\n\n      <div class=\"q-ma-md q-pt-xl\">\n        <h4>Polls</h4>\n\n        <div class=\"row\">\n          <div\n            class=\"col-xs-12 col-md-6\"\n            v-for=\"(poll, idx) in polls\"\n            :key=\"idx\"\n          >\n            <Poll\n              :poll=\"poll\"\n              class=\"q-ma-sm\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue'\nimport Poll from '@/components/Poll.vue'\nimport { useStore } from '@/store'\nimport EventsTable from '@/components/EventsTable.vue'\nimport DashboardCard from '@/components/dashboard/DashboardCard.vue'\n\nconst store = useStore()\nconst allMessages = computed(() => store.messagesPerAuthor)\nconst polls = computed(() => store.pollsData)\nstore.setSummaryItems([])\nconst events = computed(() => store.eventsData)\n</script>\n"],"names":["props","__props","store","useStore","authorName","computed","author","polls","events"],"mappings":"gvBA2BA,MAAMA,EAAQC,EAORC,EAAQC,IACN,QAAA,IAAID,EAAM,eAAe,EAEjC,MAAME,EAAaC,EAAS,IAAMH,EAAM,gBAAgB,KAAMI,GAAWN,EAAM,KAAK,WAAaM,EAAO,KAAK,CAAC,ukBCH9G,MAAMJ,EAAQC,IACME,EAAS,IAAMH,EAAM,iBAAiB,EAC1D,MAAMK,EAAQF,EAAS,IAAMH,EAAM,SAAS,EACtCA,EAAA,gBAAgB,CAAA,CAAE,EACxB,MAAMM,EAASH,EAAS,IAAMH,EAAM,UAAU"}