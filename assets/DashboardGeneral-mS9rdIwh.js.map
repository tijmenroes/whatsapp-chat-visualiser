{"version":3,"file":"DashboardGeneral-mS9rdIwh.js","sources":["../../src/components/EventsTable.vue","../../src/composables/useTextLengthSeries.ts","../../src/views/dashboard/DashboardGeneral.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <q-table\n      ref=\"dataTable\"\n      outlined\n      :rows=\"rows\"\n      :columns=\"columns\"\n      :pagination=\"{ rowsPerPage: 10 }\"\n      flat\n      wrap-cells\n    />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type { PropType } from 'vue'\nimport { ref, computed } from 'vue'\nimport { QTableColumn } from 'quasar'\nimport { Event } from '@/utils/types'\n\nconst props = defineProps({\n  data: {\n    type: Array as PropType<Event[]>,\n    required: true,\n  },\n})\n\nconst dataTable = ref()\nconst columns: QTableColumn[] = [\n  {\n    name: 'date',\n    label: 'Datum',\n    field: 'date',\n    align: 'left',\n    sortable: true,\n    style: 'width: 100px',\n  },\n\n  { name: 'event', align: 'left', label: 'Event', field: 'message', sortable: true },\n]\n\nconst rows = computed<Event[]>(() => props.data)\n</script>\n","import { Author } from '@/utils/types'\n\nexport default function (authors: Author[], showRelative = false) {\n  const categories = ['Average length']\n\n  const series = authors?.map((participant) => {\n    const messages = participant.messages.map((item) => item.amountCharacters)\n    let sum = 0\n    messages.forEach((item) => (sum += item))\n\n    const data = showRelative ? [divideAbsolute(sum, participant.messages.length)] : [sum]\n\n    return {\n      name: participant.name,\n      data,\n    }\n  })\n\n  return { series, categories }\n}\n\nfunction divideAbsolute(initial: number, divideAmount: number) {\n  return parseFloat((initial / divideAmount).toFixed(2))\n}\n","<template>\n  <div class=\"row dashboardView\">\n    <DashboardCard title=\"Messages per day\">\n      <TimeSlide :data=\"allMessages\" />\n    </DashboardCard>\n\n    <DashboardCard\n      title=\"Filter how many times words are used\"\n      subtitle=\"Fill in words to see how often they are used\"\n    >\n      <q-select\n        filled\n        v-model=\"filterWords\"\n        multiple\n        use-chips\n        hide-dropdown-icon\n        use-input\n        new-value-mode=\"add\"\n        label=\"Filtered words\"\n      />\n      <div class=\"row\">\n        <MessageWithWord\n          class=\"col-12\"\n          :data=\"data\"\n          :filter-words=\"filterWords\"\n        />\n      </div>\n    </DashboardCard>\n\n    <DashboardCard\n      is-small\n      title=\"Emoji's used total\"\n    >\n      <EmojiTable\n        :data=\"messagesContainingEmoji\"\n        class=\"q-pr-md\"\n      />\n    </DashboardCard>\n\n    <DashboardCard\n      is-small\n      title=\"Emoji's used per person\"\n    >\n      <EmojiTablePerPerson :data=\"messagesContainingEmoji\" />\n    </DashboardCard>\n\n    <DashboardCard\n      is-small\n      title=\"Attachments sent\"\n    >\n      <!-- <AttachmentsChart :data=\"messagesContainginAttachments\" />\n       -->\n      <BarChart\n        :series=\"attachments.series\"\n        :categories=\"attachments.categories\"\n      />\n    </DashboardCard>\n\n    <DashboardCard\n      is-small\n      title=\"Average message length\"\n    >\n      <BarChart\n        :series=\"textLength.series\"\n        :categories=\"textLength.categories\"\n      />\n    </DashboardCard>\n\n    <DashboardCard title=\"Events\">\n      <EventsTable :data=\"events\" />\n    </DashboardCard>\n\n    <!-- <DashboardCard\n      is-small\n      v-if=\"isGroupChat\"\n      title=\"Group name changes\"\n    >\n      <GroupNameChangesTable :data=\"events\" /> -->\n    <!-- </DashboardCard> -->\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from 'vue'\nimport MessageWithWord from '@/components/MessageWithWord.vue'\nimport EmojiTable from '@/components/EmojiTable.vue'\nimport EmojiTablePerPerson from '@/components/EmojiTablePerPerson.vue'\nimport TimeSlide from '@/components/TimeSlide.vue'\nimport EventsTable from '@/components/EventsTable.vue'\n// import GroupNameChangesTable from '@/components/GroupNameChangesTable.vue'\nimport { useStore } from '@/store'\nimport { useSummaryStore } from '@/store/summary'\nimport { SUMMARY_COLLECTION } from '@/config/summaryItems'\nimport DashboardCard from '@/components/dashboard/DashboardCard.vue'\nimport BarChart from '@/components/BarChart.vue'\nimport useTextLengthSeries from '@/composables/useTextLengthSeries.ts'\nimport useAttachmentSeries from '@/composables/useAttachmentSeries.ts'\n\nconst store = useStore()\nconst filterWords = ref(['the', 'word'])\nconst data = computed(() => store.authorsDataMessages)\nconst allMessages = computed(() => store.messagesPerAuthor)\nconst messagesContainingEmoji = computed(() => store.messagesContainingEmoji)\nconst messagesContainginAttachments = computed(() => store.messagesContainginAttachments)\nconst events = computed(() => store.eventsData)\n// const isGroupChat = computed(() => store.isGroupChat)\n\nconst summaryStore = useSummaryStore()\nsummaryStore.setSummaryState(SUMMARY_COLLECTION.general)\n\nconst textLength = computed(() => useTextLengthSeries(data.value, true))\nconst attachments = computed(() => useAttachmentSeries(messagesContainginAttachments.value, false))\n</script>\n"],"names":["props","__props","dataTable","ref","columns","rows","computed","useTextLengthSeries","authors","showRelative","categories","participant","messages","item","sum","data","divideAbsolute","initial","divideAmount","store","useStore","filterWords","allMessages","messagesContainingEmoji","messagesContainginAttachments","events","useSummaryStore","SUMMARY_COLLECTION","textLength","attachments","useAttachmentSeries"],"mappings":"m9BAoBA,MAAMA,EAAQC,EAORC,EAAYC,IACZC,EAA0B,CAC9B,CACE,KAAM,OACN,MAAO,QACP,MAAO,OACP,MAAO,OACP,SAAU,GACV,MAAO,cACT,EAEA,CAAE,KAAM,QAAS,MAAO,OAAQ,MAAO,QAAS,MAAO,UAAW,SAAU,EAAK,CAAA,EAG7EC,EAAOC,EAAkB,IAAMN,EAAM,IAAI,6KCvCtB,SAAAO,EAAAC,EAAmBC,EAAe,GAAO,CAC1D,MAAAC,EAAa,CAAC,gBAAgB,EAe7B,MAAA,CAAE,OAbMF,GAAA,YAAAA,EAAS,IAAKG,GAAgB,CAC3C,MAAMC,EAAWD,EAAY,SAAS,IAAKE,GAASA,EAAK,gBAAgB,EACzE,IAAIC,EAAM,EACVF,EAAS,QAASC,GAAUC,GAAOD,CAAK,EAElC,MAAAE,EAAON,EAAe,CAACO,EAAeF,EAAKH,EAAY,SAAS,MAAM,CAAC,EAAI,CAACG,CAAG,EAE9E,MAAA,CACL,KAAMH,EAAY,KAClB,KAAAI,CAAA,CACF,GAGe,WAAAL,EACnB,CAEA,SAASM,EAAeC,EAAiBC,EAAsB,CAC7D,OAAO,YAAYD,EAAUC,GAAc,QAAQ,CAAC,CAAC,CACvD,6FC2EA,MAAMC,EAAQC,IACRC,EAAclB,EAAI,CAAC,MAAO,MAAM,CAAC,EACjCY,EAAOT,EAAS,IAAMa,EAAM,mBAAmB,EAC/CG,EAAchB,EAAS,IAAMa,EAAM,iBAAiB,EACpDI,EAA0BjB,EAAS,IAAMa,EAAM,uBAAuB,EACtEK,EAAgClB,EAAS,IAAMa,EAAM,6BAA6B,EAClFM,EAASnB,EAAS,IAAMa,EAAM,UAAU,EAGzBO,IACR,gBAAgBC,EAAmB,OAAO,EAEvD,MAAMC,EAAatB,EAAS,IAAMC,EAAoBQ,EAAK,MAAO,EAAI,CAAC,EACjEc,EAAcvB,EAAS,IAAMwB,EAAoBN,EAA8B,MAAO,EAAK,CAAC"}